% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gt_nba.R
\name{gt_nba_logos}
\alias{gt_nba_logos}
\title{Render NBA Logos in 'gt' Tables}
\usage{
gt_nba_logos(gt_object, columns, ..., height = 30, locations = NULL)
}
\arguments{
\item{gt_object}{A table object that is created using the \code{\link[gt:gt]{gt::gt()}} function.}

\item{columns}{The columns for which the image translation should be applied.
Argument has no effect if \code{locations} is not \code{NULL}.}

\item{...}{Currently not in use}

\item{height}{The absolute height (px) of the image in the table cell.}

\item{locations}{If \code{NULL} (the default), the function will render
logos in argument \code{columns}.
Otherwise, the cell or set of cells to be associated with the team name
transformation. Only the \code{\link[gt:cells_body]{gt::cells_body()}}, \code{\link[gt:cells_stub]{gt::cells_stub()}},
\code{\link[gt:cells_column_labels]{gt::cells_column_labels()}}, and \code{\link[gt:cells_row_groups]{gt::cells_row_groups()}} helper functions
can be used here. We can enclose several of these calls within a \code{list()}
if we wish to make the transformation happen at different locations.}
}
\value{
An object of class \code{gt_tbl}.
}
\description{
Translate team abbreviations into logos and
render these images in html tables with the 'gt' package.
}
\section{Output of below example}{

\if{html}{\figure{logo_tbl_nba.png}{options: width=75\%}}
}

\examples{
\donttest{
teams <- nbaplotR::valid_team_names("NBA")
df <- data.frame(
  team_a = teams[1:6],
  logo_a = teams[1:6],
  team_b = teams[7:12],
  logo_b = teams[7:12],
  team_c = teams[13:18],
  logo_c = teams[13:18],
  team_d = teams[19:24],
  logo_d = teams[19:24],
  team_e = teams[25:30],
  logo_e = teams[25:30]
)
# create gt table and translate team names to logos
table <- df |>
  gt::gt() |>
  nbaplotR::gt_nba_logos(columns = gt::starts_with("logo")) |>
  gt::cols_label(
    gt::starts_with("team") ~ "TEAM",
    gt::starts_with("logo") ~ "LOGO"
  ) |>
  gt::tab_style(
    style = gt::cell_borders(side = "left"),
    locations = list(
      gt::cells_body(columns = gt::starts_with("team")),
      gt::cells_column_labels(columns = gt::starts_with("team"))
    )
  )
}
}
